<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Mapper.UserMapper">

	<sql id="user_sql">
			`id`, 
			`username`, 
			`birthday`, 
			`sex`, 
			`address`
	</sql>
	<!-- #{自定义} 占位符   相当于?  查询测试 -->
	<select id="getUserById" parameterType="int" resultType="User">
	SELECT 	
		<include refid="user_sql"></include> 
		FROM 
		`user` 
	 WHERE id = #{id}
	</select>
	
	<!-- 模糊查询测试 -->
	<select id="getUserByName" parameterType="string" resultType="user">
	SELECT 	
		<include refid="user_sql"></include> 
		FROM 
		`user` 
	 WHERE username LIKE '%${value}%'
	</select>

	<!-- 插入测试 -->
	<insert id="insertUser" useGeneratedKeys="true" keyProperty="id" parameterType="user">
	INSERT INTO `user`
	            (`username`,
	             `birthday`,
	             `sex`,
	             `address`)
	VALUES (#{username},
	        #{birthday},
	        #{sex},
	        #{address});	
	</insert>
	
	<!-- 测试where标签和if标签 -->
	<select id="getUserByWhere" parameterType="user" resultType="user">
	SELECT 	
	<include refid="user_sql"></include> 
	FROM 
	`user` 
	<where>
		<if test="username != null and username != ''">
			and username like '%${username}%'
		</if>
		<if test="id != null and id != ''">
			and id = #{id}
		</if>
	</where>
	</select>
	
	<!-- 测试foreach标签 -->
	<select id="getUserByIn" parameterType="user" resultType="user">
	SELECT 	
	<include refid="user_sql"></include> 
	FROM 
	`user` 
	<where>
		<foreach collection="list" item="iid" open="id in(" separator="," close=")">
			#{iid}
		</foreach>
	</where>
	</select>
	
	<!-- 一对一关联测试 订单用户  -->
	<resultMap type="order" id="order_user">
		<!-- id标签用于绑定主键 -->
		<id property="id" column="id"/>
		<!-- result标签用于绑定其他属性 -->
		<result property="userId" column="user_id"/>
		<result property="number" column="number"/>
		<result property="createtime" column="createtime"/>
		<result property="note" column="note"/>
		
		<!-- association标签用于配置一对一关联
			 property:绑定的用户属性
			 javaType:属性数据类型，支持别名
		-->
		<association property="user" javaType="user">
			<id property="id" column="user_id"/>
			
			<result property="username" column="username"/>
			<result property="address" column="address"/>
			<result property="sex" column="sex"/>
		</association>
	</resultMap>
	
	<!-- 一对多关联测试 用户订单............................................................. -->
	<resultMap type="user" id="user_order">
			<id property="id" column="id" />
		<result property="username" column="username" />
		<result property="birthday" column="birthday" />
		<result property="address" column="address" />
		<result property="sex" column="sex" />
		
		<!-- collection:配置一对多关系
			 property:用户下的order属性
			 ofType:property的数据类型，支持别名
		-->
		<collection property="orderList" ofType="order" >
			<!-- id标签用于绑定主键 -->
			<id property="id" column="id"/>
			<!-- result标签用于绑定其他属性 -->
			<result property="userId" column="user_id"/>
			<result property="number" column="number"/>
			<result property="createtime" column="createtime"/>
			<result property="note" column="note"/>
		</collection>
	</resultMap>
	
	<select id="getUserOrder" resultMap="user_order">
		SELECT
		u.`id`,
		u.`username`,
		u.`birthday`,
		u.`sex`,
		u.`address`,
		o.`id` oid,
		o.`number`,
		o.`createtime`
		FROM `user` u
		LEFT JOIN `order` o
		ON o.`user_id` = u.`id`
	</select>
	
	
	<select id="getOrderUser" resultMap="order_user">
		SELECT
		  o.`id`,
		  o.`user_id`,
		  o.`number`,
		  o.`createtime`,
		  o.`note`,
		  u.`username`,
		  u.`address`,
		  u.`sex`
		FROM `order` o
		LEFT JOIN `user` u
		ON u.id = o.`user_id`
	</select>
</mapper>