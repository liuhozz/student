package com.heima.Test18;

import java.util.Comparator;
import java.util.HashMap;
import java.util.TreeSet;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Test_18_01 {

	/**
	 * 	有一个字符串,内容是: String str="heima shi wo jia, Da Jia Yao Ai Hu Ta!";
		编写代码,统计每个字符出现的次数, 输出的结果如下: a(6) e(1) h(2) i(5) j(1) m(1) o(2) s(1) u(1) w(1) A(1) D(1) H(1) J(1) T(1) Y(1)
	 	思路:
	 		先排序
	 		在统计出现的次数
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		String str="heima shi wo jia, Da Jia Yao Ai Hu Ta!";
		HashMap<Character, Integer> hm=new HashMap<>();
		TreeSet<Character> ts=new TreeSet<>(new Comparator<Character>() {

			@Override
			public int compare(Character o1, Character o2) {
				
				if(o1>='a'&&o1<='z'){
					o1=(char) (o1-60);
				}
				if(o2>='a'&&o2<='z'){
					o2=(char) (o2-60);
				}
				
				int num=o1-o2;
				return num==0? -1: num;
			}
		});
		
		/*for(int i= 0;i<str.length();i++){
			ts.add(str.charAt(i));
		}*/
		char[] ch = str.toCharArray();
		
		/*String regex="\\w";
		Pattern p=Pattern.compile(regex);
		Matcher m=p.matcher(str);
		while(m.find())
			ts.add(str.charAt(str.indexOf(m.group())));*/
		//System.out.println(ts);
		
		for (Character c : ch) {
			hm.put(Character.isLetter(c)?c: null, !hm.containsKey(c)?1:hm.get(c)+1);
		}
		
		System.out.println(hm);
		
		/*for(int i=0;i<str.length();i++){
			
			
			
		}
		
		System.out.println(hm);*/
	}

}
