1.代码块(了解)
	1.分类:	
		①局部代码块
		②构造代码块
		③静态代码块
		④同步代码块(多线程讲)

	2.局部代码块:
		在方法中的代码块就是局部代码块
		作用: 限定变量的生命周期
		执行时间:方法调用时执行

	3.构造代码块
		定义在类中方法外的,没有任何修饰符
		作用: 把所有构造方法中相同的代码放到构造代码块中,提高代码复用性
		执行时间: 创建对象时执行,优先于构造方法执行

		每创建一个对象就调用一次!

	4.静态代码块
		定义在类中方法外,有static修饰符
		作用: 加载资源
		执行时间: 类加载的时候执行
			①跟主方法在同一个类中,优先于主方法执行
			②不跟主方法在同一个类,不会优先于主方法执行!

		静态代码块只执行一次!



2.继承
	1.让类与类之间产生关系,通过extends关键字

	2.特点:
		子类可以使用父类中的非私有的属性和方法

	3.继承的好处和弊端:	
		好处:
			1.提高代码的复用性
			2.提高代码的维护性
			3.让类与类之间产生了关系,是多态的前提

		弊端:
			耦合性增强(类与类之间的关系太紧密了)

	4.继承的特点:	
		在java中,类只能单继承,不能多继承,但是可以多层(多重)继承

	5.注意事项:	
		1.子类只能继承父类中的非私有内容
		2.子类是不能继承父类中的构造方法,但是可以访问父类的构造方法
		3.不要为了继承而继承

	6.什么时候继承?
		当类A是类B的一种的时候就可以使用继承: class A extends B{....}

	7.继承中成员变量的关系:	
		就近原则:
			变量在使用过程中,先在方法中找,找不到就到本类中的成员位置找,还找不到就到父类中成员位置找

	8.this和super的区别:	
		1.this可以调用本类中的成员变量,当本类中没有该变量时,可以调用父类中的成员变量
			super只能调用父类中的成员变量.

		2.this调用的是本类的构造方法
			super调用的是父类的构造方法.

		3.this可以调用本类中的方法,当本类中没有该方法时,可以调用父类中的方法
			super只能调用父类中的方法

	9.子类默认访问父类中的空参构造.
		为什么?
			因为子类继承了父类中的成员变量,如果想要使用需要先对它们进行初始化.所以,子类需要先调用父类的构造方法,对它们进行初始化.

		
	10.继承中构造方法的注意事项:
		this和super在调用构造方法时,必须是在构造方法的第一句!
		如果父类中没有空参构造,可以通过super来指定访问父类中的哪个有参构造,把参数传递给父类!

	
	11.在继承中成员方法的特点:
		子类在调用方法时,如果子类中没有该方法,可以调用父类中的方法.
		如果子类中有和父类中相同的方法时, 调用的是子类的方法.
		
	12.方法重写:
		前提: 要有继承关系
		子类中存在一个与父类方法名相同,参数列表相同,返回值类型相同的方法,就是方法的重写!

		作用: 对父类中的方法进行增强!

	13.方法重写的注意事项:	
		1.子类只能重写父类中非私有的方法,不能重写私有的方法
		2.子类在重写父类方法时,权限必须大于等于父类中方法的权限
		3.静态方法只能重写静态方法!


3.final关键字
	1.final可以修饰:
		类:不能被继承
		方法:不能被重写
		变量:变成常量, 只能赋值一次!
	
	2.final修饰基本数据类型变量时,不能重新赋值
	final修饰引用数据类型变量时,该变量不能重新指向新的对象,但是它的属性是可以改变的

	3.final修饰的成员变量初始化时机:
		①显示初始化
		②在构造方法中进行初始化
		③还可以在构造代码块中完成初始化
	