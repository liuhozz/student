1.封装(构造方法)
	1.什么样的方法才能叫构造方法?
		①方法名与类名相同
		②没有返回值类型
	
	2.构造方法的作用:	
		初始化成员变量

	3.构造方法特点:
		①在创建对象的时候被调用, 不能使用对象调用
		②没有返回值类型,也不能在方法中写return返回具体的值,void也没有: 不能写: return 5;
		③可以在构造方法中写return语句,但是作用是结束方法. return;

	4.方法重载:	
		在同一个类中,方法名相同,参数列表不同,与返回值无关
		构造方法可以满足以上所有条件,所以构造方法也是可以重载的!

	5.注意事项:
		①如果没有定义构造方法, 系统会默认提供一个空参的构造方法
		②如果已经定义构造方法, 系统不会再提供默认的构造方法了!
		③如果有定义有参构造,建议手动给出空参构造!

	6.成员变量的两种赋值方式的区别:
		构造方法:只是给成员变量进行初始化,只能调用一次!
		set方法: 可以修改成员变量的值,可以多次调用.比较灵活!

	7.标准类:
		①成员变量私有化:private
		②空参构造和有参构造
		③每个成员变量有对应的set/get方法

	8.对象的创建步骤:
		①把字节码文件加载进方法区
		②在主方法中声明一个引用
		③在堆内存中创建一个对象
		④成员变量进行默认初始化
		⑤成员变量进行显式初始化
		⑥构造方法初始化成员变量
		⑦把对象的地址值赋值给主方法中的引用!


2.static(静态)
	1.作用
		让所有对象共享被修饰的内容.
		静态修饰的内容都是存放在方法区中的静态区

	2.特点:
		①随着类的加载而加载
		②优先于对象而存在
		③被所有对象共享
		④可以通过类名调用: 类名.变量名   类名.方法名()
			也可以通过对象调用,但是推荐使用类名调用

	3.静态的注意事项:	
		①静态中是不能有this关键字的
		②静态只能访问静态的成员!

	4.静态变量与成员变量的区别:
		1.所属不同
			静态变量:属于类的,也叫类变量
			成员变量:属于对象,也叫对象变量(实例变量)

		2.在内存中的位置不同
			静态变量:在方法区中的静态区
			成员变量:堆内存中

		3.生命周期不同
			静态变量:随着类的加载而加载,随着类的消失而消失
			成员变量:随着对象的创建而存在,随着对象的消失而消失

		4.调用方式不同
			静态变量:可以使用类名调用,也可以通过对象调用
			成员变量:只能用对象调用

		5.工具类:	
			只提供功能的类

			把所有方法都定义成静态的. 构造方法私有化!(不让人创建对象)

	

3.文档注释
	1.Math类: 与数学相关的类

	2.Math.random(): 获取0.0~1.0之间的随机数.

	3.如何获取一个1~100之间的随机数:
		Math.random(): 0.0~0.9999999999999999999999999
		Math.random()*100: 0.0~99.999999999999999999999
		(int)(Math.random()*100): 0~99
		(int)(Math.random()*100)+1: 1~100
